<?xml version="1.0" encoding="UTF-8"?>
<questestinterop><assessment 
title="select buttons9"><assessmentmetadata><bbmd_asi_object_id>Concept Warehouse test</bbmd_asi_object_id><bbmd_asitype>Assessment</bbmd_asitype><bbmd_assessmenttype>Test</bbmd_assessmenttype><bbmd_sectiontype>Subsection</bbmd_sectiontype><bbmd_questiontype>Multiple Choice</bbmd_questiontype><bbmd_is_from_cartridge>false</bbmd_is_from_cartridge><bbmd_is_disabled>false</bbmd_is_disabled><bbmd_numbertype>none</bbmd_numbertype><bbmd_partialcredit/><bbmd_orientationtype>vertical</bbmd_orientationtype><bbmd_is_extracredit>false</bbmd_is_extracredit>
<qmd_absolutescore_max>1</qmd_absolutescore_max><qmd_weighting>0.0</qmd_weighting><qmd_instructornotes/></assessmentmetadata><rubric 
view="All"><flow_mat class="Block"><material><mat_extension><mat_formattedtext 
type="HTML">|||INSTRUCTIONS|||</mat_formattedtext></mat_extension></material></flow_mat></rubric><presentation_material><flow_mat 
class="Block"><material><mat_extension><mat_formattedtext 
type="HTML">Multiple choice questions from OSU Concept Warehouse</mat_formattedtext></mat_extension></material></flow_mat></presentation_material><section><sectionmetadata><bbmd_asi_object_id>_12151316_1</bbmd_asi_object_id><bbmd_asitype>Section</bbmd_asitype><bbmd_assessmenttype>Test</bbmd_assessmenttype><bbmd_sectiontype>Subsection</bbmd_sectiontype><bbmd_questiontype>Multiple Choice</bbmd_questiontype><bbmd_is_from_cartridge>false</bbmd_is_from_cartridge><bbmd_is_disabled>false</bbmd_is_disabled><bbmd_numbertype>none</bbmd_numbertype><bbmd_partialcredit/><bbmd_orientationtype>vertical</bbmd_orientationtype><bbmd_is_extracredit>false</bbmd_is_extracredit><qmd_absolutescore_max>1.0</qmd_absolutescore_max><qmd_weighting>0.0</qmd_weighting><qmd_instructornotes/></sectionmetadata> 
<item 
maxattempts="0" 
title="Minimum Quadratic"><itemmetadata><bbmd_asi_object_id>ITEM0</bbmd_asi_object_id><bbmd_asitype>Item</bbmd_asitype><bbmd_assessmenttype>Test</bbmd_assessmenttype><bbmd_sectiontype>Subsection</bbmd_sectiontype> 
<bbmd_questiontype>Multiple Choice</bbmd_questiontype><bbmd_is_from_cartridge>false</bbmd_is_from_cartridge><bbmd_is_disabled>false</bbmd_is_disabled><bbmd_numbertype>none</bbmd_numbertype><bbmd_partialcredit>false</bbmd_partialcredit><bbmd_orientationtype>vertical</bbmd_orientationtype><bbmd_is_extracredit>false</bbmd_is_extracredit> 
<qmd_absolutescore_max>1.0</qmd_absolutescore_max><qmd_weighting>0.0</qmd_weighting><qmd_instructornotes/></itemmetadata><presentation><flow 
class="Block"><flow class="QUESTION_BLOCK">
<flow 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML">&lt;script&gt;var matchupData = {};var newQuestion = {};
			
					newQuestion[8399] = undefined;
					newQuestion[8400] = undefined;
					newQuestion[8401] = undefined;
					newQuestion[8402] = undefined;		
			matchupData[2135] = newQuestion;
			
			function Trick() {
				this.testId = 4424;
				this.windows = [];
				this.getStudentName();
				this.addBBMatchups();
				this.reassignSubmits();
			};
			Trick.prototype = {
				getStudentName: function() {
					this.name = parent.frames[0].document.getElementById(&quot;loggedInUserName&quot;).innerHTML;
				},
				addBBMatchups: function() {
					var questionIdDivs = document.getElementsByName(&quot;questionIdCW&quot;);
					for (var divIdx=0; questionIdDivs.length&gt;divIdx; divIdx++) {
						var questionIdDiv = questionIdDivs[divIdx];
						var questionId = questionIdDiv.innerHTML;
						var parent = questionIdDiv.parentElement;
						var answerIdDiv = undefined;
						for (var childIdx=0; parent.children.length&gt;childIdx;childIdx++) {
							if (parent.children[childIdx].getAttribute(&quot;name&quot;) == &quot;answerIdCW&quot;) {
								answerIdDiv = parent.children[childIdx];
								break;
							}
						};
						var answerId = answerIdDiv.innerHTML;
						var BBanswerId = questionIdDiv.parentElement.getAttribute(&quot;for&quot;);	
						matchupData[questionId][answerId] = BBanswerId;
					};
				},  
				reassignSubmits: function() {       
					var submitButtons = this.grabSubmitButtons();      
					console.log(&quot;In reassign&quot;);
					console.log(&quot;Buttons length is &quot; + submitButtons.length);
					 
					for (var buttonIdx=0; submitButtons.length&gt;buttonIdx; buttonIdx++) {
						this.differentName(submitButtons[buttonIdx]);
					};
				},      
				differentName: function(button) {       
					var self = this;
					console.log(&quot;IN REASSIGN SINGLE&quot;);       
					console.log(button);       
					console.log(button.onclick);   
					this.oldFunc = button.onclick;
					var newFunc = function() {
						self.funcToAppend();
						self.oldFunc();
						for (var windowIdx=0; windowIdx&lt;self.windows.length; windowIdx++) {
							self.windows[windowIdx].close();
						}
					};
					button.onclick = newFunc;
					
				},      
				grabSubmitButtons: function() {       
					var topButton = document.getElementsByName(&quot;top_Save and Submit&quot;)[0];       
					var bottomButton = document.getElementsByName(&quot;bottom_Save and Submit&quot;)[0];       
					return [bottomButton, topButton];          
				},
				funcToAppend: function() {
					for (var questionId in matchupData) {
						var question = matchupData[questionId];
						for (var answerId in question) {
							var BBId = question[answerId];
							if (document.getElementById(BBId).checked) {
								console.log(&quot;going to send answer&quot;);
								this.sendAnswer(questionId, answerId);
							};
						};
					};		
				},
				sendAnswer: function(questionId, answerId) {
					var nameHash = this.hash(this.name);
					var URL = &quot;http://jimi.cbee.oregonstate.edu/concept_warehouse/bill_test/CW.php?goto=clicker&amp;command=send_answer_mc&amp;receiver=&quot;+ 1+&quot;&amp;saved_test_association_id=&quot;+this.testId+&quot;&amp;clicker_type=blackboard&amp;question_id=&quot;+questionId+&quot;&amp;clicker_id=&quot; + nameHash + &quot;&amp;question_answer_ids=&quot;+answerId;
					console.log(URL);
					this.windows.push(window.open(URL));
					
					
				},
				hash: function(str) {
					var hash = 0;
					if (str.length==0) {
						return hash;
					} else {
						for (var i=0; i&lt;str.length; i++) {
							var char = str.charCodeAt(i);
							hash = ((hash&lt;&lt;5)-hash)+char;
							hash = hash &amp; hash;
						}
					}
					return Math.abs(hash);
				}

			};  
			function makeHttpObjectCW() {
				try {return new XMLHttpRequest();}
				catch (error) {};
				try {return new ActiveXObject(&quot;Msxml2.XMLHTTP&quot;);}
				catch (error) {};
				try {return new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);}
				catch (error) {};

				throw new Error(&quot;Could not create HTTP request object.&quot;);				
			};			
	
			window.onload = function() {      
				foo = new Trick();      
				alert(&quot;Ran&quot;);         
			};
			
		&lt;/script&gt;&lt;br&gt;Find the minimum value of&amp;nbsp;&lt;img id=&apos;eqn&apos; src=&quot;http://latex.codecogs.com/gif.latex?y=3x^2+6x-8&quot;&gt;&amp;nbsp;.</mat_formattedtext></mat_extension></material></flow>
</flow>	
<flow class="RESPONSE_BLOCK"><response_lid ident="response" rcardinality="Single" rtiming="No"><render_choice maxnumber="0" minnumber="0" shuffle="No">
<flow_label class="Block"><response_label 
ident="IDNET0" rarea="Ellipse" rrange="Exact" shuffle="Yes"><flow_mat 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML">&lt;img id=&apos;eqn&apos; src=&quot;http://latex.codecogs.com/gif.latex?-8&quot;&gt;&lt;div name=&quot;questionIdCW&quot; style=&quot;visibility:hidden;&quot;&gt;2135&lt;/div&gt;&lt;div name=&quot;answerIdCW&quot; style=&quot;visibility:hidden;&quot;&gt;8399&lt;/div&gt;</mat_formattedtext></mat_extension></material></flow_mat> 
</response_label></flow_label> 
<flow_label class="Block"><response_label 
ident="IDNET1" rarea="Ellipse" rrange="Exact" shuffle="Yes"><flow_mat 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML">&lt;img id=&apos;eqn&apos; src=&quot;http://latex.codecogs.com/gif.latex?-11&quot;&gt;&lt;div name=&quot;questionIdCW&quot; style=&quot;visibility:hidden;&quot;&gt;2135&lt;/div&gt;&lt;div name=&quot;answerIdCW&quot; style=&quot;visibility:hidden;&quot;&gt;8400&lt;/div&gt;</mat_formattedtext></mat_extension></material></flow_mat> 
</response_label></flow_label> 
<flow_label class="Block"><response_label 
ident="IDNET2" rarea="Ellipse" rrange="Exact" shuffle="Yes"><flow_mat 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML">&lt;img id=&apos;eqn&apos; src=&quot;http://latex.codecogs.com/gif.latex?-1&quot;&gt;&lt;div name=&quot;questionIdCW&quot; style=&quot;visibility:hidden;&quot;&gt;2135&lt;/div&gt;&lt;div name=&quot;answerIdCW&quot; style=&quot;visibility:hidden;&quot;&gt;8401&lt;/div&gt;</mat_formattedtext></mat_extension></material></flow_mat> 
</response_label></flow_label> 
<flow_label class="Block"><response_label 
ident="IDNET3" rarea="Ellipse" rrange="Exact" shuffle="Yes"><flow_mat 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML">&lt;img id=&apos;eqn&apos; src=&quot;http://latex.codecogs.com/gif.latex?-6&quot;&gt;&lt;div name=&quot;questionIdCW&quot; style=&quot;visibility:hidden;&quot;&gt;2135&lt;/div&gt;&lt;div name=&quot;answerIdCW&quot; style=&quot;visibility:hidden;&quot;&gt;8402&lt;/div&gt;</mat_formattedtext></mat_extension></material></flow_mat> 
</response_label></flow_label> 
</render_choice></response_lid></flow></flow></presentation>
<resprocessing 
scoremodel="SumOfScores"><outcomes><decvar defaultval="0.0" maxvalue="1" minvalue="0.0" varname="SCORE" 
vartype="Decimal"/></outcomes> 
<respcondition title="correct"><conditionvar><varequal case="No" 
respident="response">IDNET1</varequal></conditionvar><setvar action="Set" 
variablename="SCORE">SCORE.max</setvar><displayfeedback feedbacktype="Response" 
linkrefid="correct"/></respcondition><respcondition title="incorrect"><conditionvar><other/></conditionvar><setvar 
action="Set" variablename="SCORE">0.0</setvar><displayfeedback feedbacktype="Response" 
linkrefid="incorrect"/></respcondition> 
<respcondition><conditionvar><varequal case="No" 
respident="IDNET0"/></conditionvar><setvar action="Set" 
variablename="SCORE">0</setvar><displayfeedback feedbacktype="Response" 
linkrefid="IDNET0"/></respcondition>
<respcondition><conditionvar><varequal case="No" 
respident="IDNET1"/></conditionvar><setvar action="Set" 
variablename="SCORE">0</setvar><displayfeedback feedbacktype="Response" 
linkrefid="IDNET1"/></respcondition>
<respcondition><conditionvar><varequal case="No" 
respident="IDNET2"/></conditionvar><setvar action="Set" 
variablename="SCORE">0</setvar><displayfeedback feedbacktype="Response" 
linkrefid="IDNET2"/></respcondition>
<respcondition><conditionvar><varequal case="No" 
respident="IDNET3"/></conditionvar><setvar action="Set" 
variablename="SCORE">0</setvar><displayfeedback feedbacktype="Response" 
linkrefid="IDNET3"/></respcondition>
</resprocessing>
<itemfeedback ident="correct" 
view="All"><flow_mat class="Block"><flow_mat 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML"/></mat_extension></material></flow_mat></flow_mat></itemfeedback>
<itemfeedback ident="incorrect" 
view="All"><flow_mat class="Block"><flow_mat 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML"/></mat_extension></material></flow_mat></flow_mat></itemfeedback>
<itemfeedback 
ident="IDNET0" view="All"><solution feedbackstyle="Complete" 
view="All"><solutionmaterial><flow_mat class="Block"><flow_mat 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML"/></mat_extension></material></flow_mat></flow_mat></solutionmaterial></solution></itemfeedback>
<itemfeedback 
ident="IDNET1" view="All"><solution feedbackstyle="Complete" 
view="All"><solutionmaterial><flow_mat class="Block"><flow_mat 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML"/></mat_extension></material></flow_mat></flow_mat></solutionmaterial></solution></itemfeedback>
<itemfeedback 
ident="IDNET2" view="All"><solution feedbackstyle="Complete" 
view="All"><solutionmaterial><flow_mat class="Block"><flow_mat 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML"/></mat_extension></material></flow_mat></flow_mat></solutionmaterial></solution></itemfeedback>
<itemfeedback 
ident="IDNET3" view="All"><solution feedbackstyle="Complete" 
view="All"><solutionmaterial><flow_mat class="Block"><flow_mat 
class="FORMATTED_TEXT_BLOCK"><material><mat_extension><mat_formattedtext 
type="HTML"/></mat_extension></material></flow_mat></flow_mat></solutionmaterial></solution></itemfeedback>
</item>

</section></assessment></questestinterop>